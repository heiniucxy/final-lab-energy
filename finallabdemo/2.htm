<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ECharts 联动示例</title>
    <!-- 引入 ECharts 文件 -->
    <script src="https://cdn.jsdelivr.net/npm/echarts@5.0.0/dist/echarts.min.js"></script>
</head>
<body>
    <div style="display: flex;">
        <!-- 折线图容器 -->
        <div id="lineChart" style="width: 800px;height:400px;"></div>
        <!-- 饼图容器 -->
        <div id="pieChart" style="width: 600px;height:400px;"></div>
    </div>
    <script type="text/javascript">

    var jsonData = [
    {
        "province": "\u5317\u4eac\u5e02",
        "data": [
            {
                "year": 2019,
                "value": [
                    0.001,
                    936.99,
                    500.9,
                    697.8,
                    161.87,
                    0.48,
                    189.4,
                    1166.0,
                    182.8,
                    3836.241
                ]
            },
            {
                "year": 2018,
                "value": [
                    0.01,
                    911.78,
                    493.6,
                    691.03,
                    178.78,
                    1.54,
                    187.88,
                    1142.38,
                    276.19,
                    3883.1900000000005
                ]
            },
            {
                "year": 2017,
                "value": [
                    0.18,
                    892.54,
                    489.85,
                    644.0,
                    175.11,
                    2.81,
                    164.56,
                    1066.89,
                    490.46,
                    3926.3999999999996
                ]
            },
            {
                "year": 2016,
                "value": [
                    0.21,
                    821.0,
                    470.37,
                    594.27,
                    172.69,
                    4.64,
                    162.31,
                    1020.27,
                    847.62,
                    4093.3799999999997
                ]
            },
            {
                "year": 2015,
                "value": [
                    0.44,
                    991.54,
                    462.75,
                    544.38,
                    182.35,
                    4.91,
                    146.88,
                    952.72,
                    1165.18,
                    4451.150000000001
                ]
            },
            {
                "year": 2014,
                "value": [
                    0.64,
                    1034.62,
                    440.62,
                    507.58,
                    196.46,
                    5.63,
                    113.7,
                    937.05,
                    1736.54,
                    4972.84
                ]
            },
            {
                "year": 2013,
                "value": [
                    0.79,
                    870.92,
                    423.61,
                    477.06,
                    193.9,
                    8.3,
                    98.81,
                    913.1,
                    2019.23,
                    5005.719999999999
                ]
            },
            {
                "year": 2012,
                "value": [
                    32.27,
                    1075.77,
                    415.9,
                    443.33,
                    215.82,
                    78.16,
                    92.07,
                    874.3,
                    2270.0,
                    5497.62
                ]
            },
        ]
    },
    {
        "province": "\u5929\u6d25\u5e02",
        "data": [
            {
                "year": 2019,
                "value": [
                    903.99,
                    1693.35,
                    284.46,
                    110.58,
                    316.92,
                    50.0,
                    110.61,
                    878.0,
                    3766.11,
                    8114.02
                ]
            },
            {
                "year": 2018,
                "value": [
                    867.23,
                    1688.23,
                    273.65,
                    108.92,
                    326.06,
                    46.99,
                    104.03,
                    855.14,
                    3832.89,
                    8103.139999999999
                ]
            },
            {
                "year": 2017,
                "value": [
                    808.7,
                    1624.85,
                    273.47,
                    101.5,
                    352.32,
                    40.68,
                    83.31,
                    805.59,
                    3875.61,
                    7966.030000000001
                ]
            },
            {
                "year": 2016,
                "value": [
                    887.29,
                    1433.6,
                    274.49,
                    82.02,
                    370.35,
                    45.33,
                    74.53,
                    807.93,
                    4230.16,
                    8205.7
                ]
            },
            {
                "year": 2015,
                "value": [
                    904.69,
                    1616.72,
                    263.73,
                    65.78,
                    353.43,
                    94.14,
                    63.98,
                    800.6,
                    4538.83,
                    8701.9
                ]
            },
            {
                "year": 2014,
                "value": [
                    954.39,
                    1603.17,
                    226.82,
                    59.85,
                    334.43,
                    78.2,
                    45.49,
                    794.36,
                    5027.28,
                    9123.989999999998
                ]
            },
            {
                "year": 2013,
                "value": [
                    955.48,
                    1759.15,
                    212.24,
                    56.12,
                    324.65,
                    86.93,
                    37.79,
                    774.5,
                    5278.67,
                    9485.529999999999
                ]
            },
            {
                "year": 2012,
                "value": [
                    882.72,
                    1544.62,
                    253.75,
                    29.41,
                    378.17,
                    122.33,
                    32.58,
                    722.5,
                    5298.0,
                    9264.08
                ]
            },
            
        ]
    },];
var startYear = 2013; // 设置初始年份为2013年
var endYear = 2017;
var Province = "\u5929\u6d25\u5e02";
// 初始化折线图和饼图实例
var lineChart = echarts.init(document.getElementById('lineChart'));
var pieChart = echarts.init(document.getElementById('pieChart'));
// 提取年份和为每个类别构建数据系列
var years = [];
var seriesData = Array(10).fill(null).map(() => []);
var totalResources = []; // 用于存储每年的资源总量

jsonData.forEach(function(provinceData) {
    if (provinceData.province === Province) {
        provinceData.data.forEach(function(yearData) {
            if (yearData.year >= startYear && yearData.year <= endYear) {
                years.push(yearData.year.toString());
                var yearlyTotal = 0;

                yearData.value.forEach(function(categoryValue, index) {
                    seriesData[index].push(categoryValue);
                    yearlyTotal += categoryValue;
                });

                totalResources.push(yearlyTotal);
            }
        });
    }
});

// 构建折线图的系列数据
var lineSeries = seriesData.map(function(data, index) {
    return {
        name: '类别' + (index + 1),
        type: 'line',
        data: data,
        showSymbol: false,
        smooth: true,
        emphasis: {
            focus: 'series'
        }
    };
});
// 添加总量的折线系列
lineSeries.unshift({
    name: '总量',
    type: 'line',
    data: totalResources,
    showSymbol: false,
    smooth: true,
    emphasis: {
        focus: 'series'
    }
});
// 提取年份和对应的资源总量数据
var years = [];
var totalResources = [];
var categoryTotals = Array(10).fill(0); // 创建一个数组来存储每个类别的总和

jsonData.forEach(function(provinceData) {
    if (provinceData.province === Province) {
        provinceData.data.forEach(function(yearData) {
            if (yearData.year >= startYear && yearData.year <= endYear) {
                years.push(yearData.year.toString());
                totalResources.push(yearData.value.reduce(function(a, b) { return a + b; }, 0));

                // 累加每个类别的值
                yearData.value.forEach(function(categoryValue, index) {
                    categoryTotals[index] += categoryValue;
                });
            }
        });
    }
});


// 准备饼图数据
var pieData = categoryTotals.map(function(total, index) {
    return { value: total, name: '类别' + (index + 1) };
});

// 然后是折线图和饼图的配置项及其他代码...



    // 折线图的配置项和数据
var lineOption = {
    title: { text:Province+ '各类别资源及总量变化',
        left: 'center', 
        top: 'top' },
    tooltip: { trigger: 'axis' },
    legend: {
type: 'scroll', // 设置图例为可滚动的
        top: 'bottom',
        data: ['总量'].concat(seriesData.map((_, index) => '类别' + (index + 1))),
        selected: {
            '总量': true,
            // 默认隐藏其他类别
            ...seriesData.reduce((obj, _, index) => {
                obj['类别' + (index + 1)] = false;
                return obj;
            }, {})
        }
    },
    xAxis: {
        type: 'category',
        data: years
    },
    yAxis: { type: 'value' },
    series: lineSeries
};

    // 饼图的配置项和数据
    var pieOption = {
    title: { text: Province + startYear + '-' + endYear +'年资源类别分布',left: 'center', 
        top: 'top' },
    tooltip: { trigger: 'item' },
    legend: {type: 'scroll', // 设置图例为可滚动的
        top: 'bottom', top: '5%', left: 'center' },
    series: [{
        name: '资源分布',
        type: 'pie',
        radius: '50%',
        data: pieData,
        emphasis: {
            itemStyle: {
                shadowBlur: 10,
                shadowOffsetX: 0,
                shadowColor: 'rgba(0, 0, 0, 0.5)'
            }
        }
    }]
};


    // 设置折线图的配置项和数据
    lineChart.setOption(lineOption);
    // 设置饼图的配置项和数据
    pieChart.setOption(pieOption);

    var selectedIndex = null; // 跟踪选中的数据点索引

    // 折线图的点击事件监听
    lineChart.on('click', function (params) {
    if (params.componentType === 'series') {
        var year = params.name;
        // 检查是否已有选中的点
        if (selectedIndex !== null) {
            lineOption.series[0].data[selectedIndex].symbolSize = 6; // 重置原始大小
        }
        selectedIndex = params.dataIndex;
        lineOption.series[0].data[selectedIndex].symbolSize = 10; // 设置新的大小

        // 更新折线图
        lineChart.setOption(lineOption);
        // 显示提示框
        lineChart.dispatchAction({
            type: 'showTip',
            seriesIndex: 0,
            dataIndex: selectedIndex
        });

        // 获取选中年份的数据
        var selectedYearData = jsonData.find(p => p.province === Province).data.find(d => d.year.toString() === year);
        var pieData = selectedYearData.value.map(function(val, idx) {
            return { value: val, name: '类别' + (idx + 1) };
        });

        // 更新饼图数据
        pieChart.setOption({
            title: { text: Province+year + '年资源类别分布' },
            series: [{ data: pieData }]
        });
    }
});

    // 点击空白处的事件监听
    lineChart.getZr().on('click', function (event) {
    if (!event.target) {
        if (selectedIndex !== null) {
            lineOption.series[0].data[selectedIndex].symbolSize = 6; // 重置原始大小
            lineChart.setOption(lineOption);
            // 隐藏提示框
            lineChart.dispatchAction({
                type: 'hideTip'
            });
            selectedIndex = null;

            // 重置饼图为整个时间区间的数据
            pieChart.setOption({
                title: { text: Province + startYear + '-' + endYear +'年资源类别分布' },
                series: [{ data: pieData }] // 使用之前计算的整个区间的数据
            });
        }
    }
});


    </script>
</body>
</html>
